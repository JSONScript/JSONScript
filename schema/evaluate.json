{
  "id": "http://json-script.com/schema/evaluate.json#",
  "$schema": "http://json-script.com/schema/evaluate_metaschema.json#",
  "description": "schema with custom keywords that evaluates JSON script. It assumes that the script is valid",
  "switch": [
    {
      "if": { "type": "object" },
      "then": {
        "title": "parallel execution or script command",
        "description": "evaluates all properties in parallel or executes script command (its keywords are evaluated in parallel too)",
        "allOf":[
          {
            "title": "evaluate properties",
            "description": "evaluates all properties using the same schema, properties-scripts are replaced with returned data or 'promise'",
            "additionalProperties": { "$ref": "#" }
          },
          {
            "title": "validate keywords",
            "description": "validates script keyword values or chains promises to validate resolved values of keywords",
            "properties": {
              "$func":   { "thenValue": { "$ref": "#uuidOrIdentifier" } },
              "$object": { "thenValue": { "$ref": "#uuidOrIdentifier" } },
              "$method": { "thenValue": { "$ref": "#identifier" } },
              "$ref":    { "thenValue": { "$ref": "#jsonPointer" } },
              "$data":   { "thenValue": { "$ref": "#anyJsonPointer" } }
            }
          },
          {
            "title": "execute command",
            "description": "executes supported script commands",
            "switch": [
              {
                "if": { "required": [ "$func" ] },
                "then": { "callFunc": true }
              },
              {
                "if": { "required": [ "$method" ] },
                "then": { "callMethod": true }
              },
              {
                "if": { "required": [ "$ref" ] },
                "then": { "getRef": true }
              },
              {
                "if": { "required": [ "$data" ] },
                "then": { "getData": true }
              }
            ]
          }
        ]
      }
    },
    {
      "if": { "type": "array" },
      "then": {
        "title": "sequential execution",
        "description": "queues items so that the next promise is created only after the previous one is resolved",
        "queueItems": true
      }
    }
  ],
  "definitions": {
    "identifier": {
      "id": "#identifier",
      "type": "string",
      "pattern": "^[A-Za-z$_][A-Za-z$_0-9]*$"
    },
    "uuidOrIdentifier": {
      "id": "#uuidOrIdentifier",
      "type": "string",
      "anyOf": [
        { "pattern": "^[A-Za-z$_][A-Za-z$_0-9]*$" },
        { "format": "uuid" }
      ]
    },
    "jsonPointer": {
      "id": "#jsonPointer",
      "type": "string",
      "format": "json-pointer"
    },
    "anyJsonPointer": {
      "id": "#anyJsonPointer",
      "type": "string",
      "anyOf": [
        { "format": "json-pointer" },
        { "format": "relative-json-pointer" }
      ]
    }
  }
}
