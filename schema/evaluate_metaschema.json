{
  "id": "http://json-script.com/schema/evaluate_metaschema.json#",
  "$schema": "https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/json-schema-v5.json#",
  "allOf": [
    {
      "$ref": "https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/json-schema-v5.json#"
    },
    {
      "properties": {
        "eval$exec": {
          "title": "$exec call",
          "description": "call function or method in $exec instruction; keyword should replace the instruction with synchronous or asynchronous value",
          "constant": true
        },
        "eval$ref": {
          "title": "$ref to the part of the script",
          "description": "Keyword should replace $ref instruction with the result of the script evaluation at this position",
          "constant": true
        },
        "eval$data": {
          "title": "$data reference to the part of the data instance",
          "description": "Keyword should replace $data instruction with the data value at the position defined by JSON-pointer",
          "constant": true
        },
        "eval$if": {
          "title": "$if/$then/$else",
          "description": "evaluates $if, if it is true - instruction evaluates to the result of $then evaluation ($else is skipped), if it is false - evaluates to $else ($then is skipped), otherwise throws an exception. If $if is false and $else is not defined it evaluates to null",
          "constant": true
        },
        "eval$delay": {
          "title": "delayed script evaluation",
          "description": "evaluates script in $delay after the delay of $wait milliseconds (default is 0)",
          "constant": true
        },
        "validateAsync": {
          "title": "'asynchronous' validation",
          "description": "Validates resolved asynchronous value and replaces the data with another asynchronous value. If the data is synchronous validates it immediately. Please note that the keyword itself executes synchronously.",
          "$ref": "#"
        },
        "objectToAsync": {
          "title": "Object to asynchronous value",
          "description": "Merge object properties into a single [asynchronous] object value",
          "constant": true
        },
        "itemsSerial": {
          "title": "sequential evaluation",
          "description": "Keyword should replace the array with the asynchronous value that resolves to array of results, but instructions should only be executed after the previous one resolves",
          "$ref": "#"
        },
        "resolvePendingRefs": {
          "title": "resolve references",
          "description": "after each part of the script is evaluated, the references pointing to it and its subparts are resolved",
          "constant": true
        }
      }
    }
  ]
}