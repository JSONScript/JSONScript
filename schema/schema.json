{
  "id": "http://www.json-script.com/schema/schema.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "JSONScript schema",
  "description": "JSONScript script with instructions (generated from template)",
  "anyOf": [
    {
      "$ref": "#$exec"
    },
    {
      "$ref": "#$ref"
    },
    {
      "$ref": "#$data"
    },
    {
      "$ref": "#$if"
    },
    {
      "$ref": "#$delay"
    },
    {
      "$ref": "#$func"
    },
    {
      "$ref": "#$call"
    },
    {
      "$ref": "#$quote"
    },
    {
      "$ref": "#parallel"
    },
    {
      "$ref": "#sequential"
    },
    {
      "$ref": "#scalar"
    }
  ],
  "definitions": {
    "_$exec": {
      "id": "#$exec",
      "title": "$exec",
      "description": "call to external object, $exec and $method values should evaluate to a string",
      "type": "object",
      "properties": {
        "$exec": {
          "$ref": "#"
        },
        "$method": {
          "$ref": "#"
        },
        "$args": {
          "$ref": "#"
        }
      },
      "additionalProperties": false,
      "required": [
        "$exec"
      ]
    },
    "_$ref": {
      "id": "#$ref",
      "title": "$ref",
      "description": "data/script from the current script using absolute/relative JSON-pointer expression",
      "type": "object",
      "properties": {
        "$ref": {
          "$ref": "#"
        }
      },
      "additionalProperties": false,
      "required": [
        "$ref"
      ]
    },
    "_$data": {
      "id": "#$data",
      "title": "$data",
      "description": "data from the data instance using JSON-pointer expression, $data value should evalute to a string before the expression is evaluated",
      "type": "object",
      "properties": {
        "$data": {
          "$ref": "#"
        }
      },
      "additionalProperties": false,
      "required": [
        "$data"
      ]
    },
    "_$if": {
      "id": "#$if",
      "title": "$if",
      "description": "conditional evaluation",
      "type": "object",
      "properties": {
        "$if": {
          "$ref": "#"
        },
        "$then": {
          "$ref": "#"
        },
        "$else": {
          "$ref": "#"
        }
      },
      "additionalProperties": false,
      "required": [
        "$if",
        "$then"
      ]
    },
    "_$delay": {
      "id": "#$delay",
      "title": "$delay",
      "description": "delayed script evaluation",
      "type": "object",
      "properties": {
        "$delay": {
          "$ref": "#"
        },
        "$wait": {
          "$ref": "#"
        }
      },
      "additionalProperties": false,
      "required": [
        "$delay"
      ]
    },
    "_$func": {
      "id": "#$func",
      "title": "$func",
      "description": "function definition",
      "type": "object",
      "properties": {
        "$func": {
          "$ref": "#"
        },
        "$name": {
          "$ref": "#"
        },
        "$args": {
          "$ref": "#"
        }
      },
      "additionalProperties": false,
      "required": [
        "$func"
      ]
    },
    "_$call": {
      "id": "#$call",
      "title": "$call",
      "description": "function call",
      "type": "object",
      "properties": {
        "$call": {
          "$ref": "#"
        },
        "$args": {
          "$ref": "#"
        }
      },
      "additionalProperties": false,
      "required": [
        "$call"
      ]
    },
    "_$quote": {
      "id": "#$quote",
      "title": "$quote",
      "description": "use value without evaluation",
      "type": "object",
      "properties": {
        "$quote": {
          "$ref": "#"
        }
      },
      "additionalProperties": false,
      "required": [
        "$quote"
      ]
    },
    "parallel": {
      "id": "#parallel",
      "description": "scripts in the object are executed in parallel, property names should not start with $",
      "type": "object",
      "patternProperties": {
        "^[^$]": {
          "$ref": "#"
        }
      },
      "additionalProperties": false
    },
    "sequential": {
      "id": "#sequential",
      "description": "scripts in array are executed sequentially",
      "type": "array",
      "items": {
        "$ref": "#"
      }
    },
    "scalar": {
      "id": "#scalar",
      "description": "scalar values are also valid JSONScript",
      "type": [
        "string",
        "number",
        "integer",
        "boolean",
        "null"
      ]
    }
  }
}